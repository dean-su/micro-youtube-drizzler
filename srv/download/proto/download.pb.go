// Code generated by protoc-gen-go. DO NOT EDIT.
// source: downloader/proto/download.proto

/*
Package download is a generated protocol buffer package.

It is generated from these files:
	downloader/proto/download.proto

It has these top-level messages:
	Request
	Result
*/
package download

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	GCloudBucketName string `protobuf:"bytes,1,opt,name=GCloudBucketName" json:"GCloudBucketName,omitempty"`
	GCloudFileName   string `protobuf:"bytes,2,opt,name=GCloudFileName" json:"GCloudFileName,omitempty"`
	Title            string `protobuf:"bytes,3,opt,name=Title" json:"Title,omitempty"`
	CategoryId       string `protobuf:"bytes,4,opt,name=CategoryId" json:"CategoryId,omitempty"`
	Description      string `protobuf:"bytes,5,opt,name=Description" json:"Description,omitempty"`
	CourseURL        string `protobuf:"bytes,6,opt,name=CourseURL" json:"CourseURL,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetGCloudBucketName() string {
	if m != nil {
		return m.GCloudBucketName
	}
	return ""
}

func (m *Request) GetGCloudFileName() string {
	if m != nil {
		return m.GCloudFileName
	}
	return ""
}

func (m *Request) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Request) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *Request) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Request) GetCourseURL() string {
	if m != nil {
		return m.CourseURL
	}
	return ""
}

type Result struct {
	AckResult string `protobuf:"bytes,1,opt,name=AckResult" json:"AckResult,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetAckResult() string {
	if m != nil {
		return m.AckResult
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "download.Request")
	proto.RegisterType((*Result)(nil), "download.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Download service

type DownloadClient interface {
	SetDownloadTask(ctx context.Context, in *Request, opts ...client.CallOption) (*Result, error)
}

type downloadClient struct {
	c           client.Client
	serviceName string
}

func NewDownloadClient(serviceName string, c client.Client) DownloadClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "download"
	}
	return &downloadClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *downloadClient) SetDownloadTask(ctx context.Context, in *Request, opts ...client.CallOption) (*Result, error) {
	req := c.c.NewRequest(c.serviceName, "Download.SetDownloadTask", in)
	out := new(Result)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Download service

type DownloadHandler interface {
	SetDownloadTask(context.Context, *Request, *Result) error
}

func RegisterDownloadHandler(s server.Server, hdlr DownloadHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Download{hdlr}, opts...))
}

type Download struct {
	DownloadHandler
}

func (h *Download) SetDownloadTask(ctx context.Context, in *Request, out *Result) error {
	return h.DownloadHandler.SetDownloadTask(ctx, in, out)
}

func init() { proto.RegisterFile("downloader/proto/download.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x89, 0xda, 0xd8, 0x8e, 0xa0, 0x75, 0xf0, 0xb0, 0x88, 0x68, 0xe9, 0xa1, 0x88, 0x87,
	0x16, 0x14, 0xbc, 0xdb, 0x14, 0x45, 0x10, 0x0f, 0xb1, 0x3e, 0x40, 0x4c, 0x06, 0x59, 0xb2, 0x76,
	0xeb, 0xee, 0x2c, 0xe2, 0x73, 0xfa, 0x42, 0xd2, 0x49, 0x62, 0x82, 0x3d, 0x7e, 0xdf, 0xff, 0x33,
	0x30, 0x3f, 0x5c, 0x14, 0xf6, 0x6b, 0x65, 0x6c, 0x56, 0x90, 0x9b, 0xad, 0x9d, 0x65, 0x3b, 0x6b,
	0xc4, 0x54, 0x10, 0xfb, 0x0d, 0x8f, 0x7f, 0x22, 0xd8, 0x4f, 0xe9, 0x33, 0x90, 0x67, 0xbc, 0x82,
	0xe1, 0x43, 0x62, 0x6c, 0x28, 0xe6, 0x21, 0x2f, 0x89, 0x9f, 0xb3, 0x0f, 0x52, 0xd1, 0x28, 0xba,
	0x1c, 0xa4, 0x5b, 0x1e, 0x27, 0x70, 0x58, 0xb9, 0x7b, 0x6d, 0x48, 0x9a, 0x3b, 0xd2, 0xfc, 0x67,
	0xf1, 0x04, 0x7a, 0x4b, 0xcd, 0x86, 0xd4, 0xae, 0xc4, 0x15, 0xe0, 0x39, 0x40, 0x92, 0x31, 0xbd,
	0x5b, 0xf7, 0xfd, 0x58, 0xa8, 0x3d, 0x89, 0x3a, 0x06, 0x47, 0x70, 0xb0, 0x20, 0x9f, 0x3b, 0xbd,
	0x66, 0x6d, 0x57, 0xaa, 0x27, 0x85, 0xae, 0xc2, 0x33, 0x18, 0x24, 0x36, 0x38, 0x4f, 0xaf, 0xe9,
	0x93, 0x8a, 0x25, 0x6f, 0xc5, 0x78, 0x02, 0x71, 0x4a, 0x3e, 0x18, 0xde, 0xf4, 0xee, 0xf2, 0xb2,
	0x82, 0xfa, 0x99, 0x56, 0x5c, 0xcf, 0xa1, 0xbf, 0xa8, 0x97, 0xc0, 0x5b, 0x38, 0x7a, 0x21, 0x6e,
	0x70, 0x99, 0xf9, 0x12, 0x8f, 0xa7, 0x7f, 0xbb, 0xd5, 0x1b, 0x9d, 0x0e, 0xbb, 0x6a, 0x73, 0xe3,
	0x2d, 0x96, 0x49, 0x6f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x84, 0xca, 0x29, 0x57, 0x75, 0x01,
	0x00, 0x00,
}
